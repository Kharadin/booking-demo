{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false); // const prefix = \"https://booking1demo.herokuapp.com/api\" ;\n\n  const prefix = \"localhost:8800/api\";\n  useEffect(() => {\n    console.log(\"Use effect in useFetch\");\n\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const res = await axios.get(prefix + url);\n        console.log(prefix + url);\n        setData(res.data);\n      } catch (err) {\n        setError(err);\n      }\n\n      setLoading(false);\n    };\n\n    fetchData();\n  }, []); // it's [url] if you want it to act every time url is changed.\n\n  const reFetch = async () => {\n    setLoading(true);\n\n    try {\n      const res = await axios.get(prefix + url);\n      console.log(prefix + url);\n      setData(res.data);\n    } catch (err) {\n      setError(err);\n    }\n\n    setLoading(false);\n  };\n\n  return {\n    data,\n    loading,\n    error,\n    reFetch\n  };\n};\n\n_s(useFetch, \"Oicl48iGuYykLyvnN5ILs6bqZ0Y=\");\n\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","axios","useFetch","url","data","setData","loading","setLoading","error","setError","prefix","console","log","fetchData","res","get","err","reFetch"],"sources":["/Users/dimetrius/Documents/BookingApp/client/src/hooks/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst useFetch = (url) => {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  // const prefix = \"https://booking1demo.herokuapp.com/api\" ;\n\n  const prefix = \"localhost:8800/api\";\n\n  \n\n  useEffect(() => {\n     console.log(\"Use effect in useFetch\")\n      const fetchData = async () => {\n        setLoading(true);\n        try {\n          const res = await axios.get(prefix + url);\n          console.log(prefix+url);\n          setData(res.data);\n        } catch (err) {\n          setError(err);\n        }\n         setLoading(false);\n      };\n    fetchData();\n  }, []);\n  // it's [url] if you want it to act every time url is changed.\n\n  const reFetch = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get(prefix + url);\n      console.log(prefix+url);\n      setData(res.data);\n    } catch (err) {\n      setError(err);\n    }\n    setLoading(false);\n  };\n\n  return { data, loading, error, reFetch };\n};\n\nexport default useFetch;"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;EAAA;;EACxB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,KAAD,CAAtC;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,KAAD,CAAlC,CAHwB,CAIxB;;EAEA,MAAMU,MAAM,GAAG,oBAAf;EAIAX,SAAS,CAAC,MAAM;IACbY,OAAO,CAACC,GAAR,CAAY,wBAAZ;;IACC,MAAMC,SAAS,GAAG,YAAY;MAC5BN,UAAU,CAAC,IAAD,CAAV;;MACA,IAAI;QACF,MAAMO,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUL,MAAM,GAAGP,GAAnB,CAAlB;QACAQ,OAAO,CAACC,GAAR,CAAYF,MAAM,GAACP,GAAnB;QACAE,OAAO,CAACS,GAAG,CAACV,IAAL,CAAP;MACD,CAJD,CAIE,OAAOY,GAAP,EAAY;QACZP,QAAQ,CAACO,GAAD,CAAR;MACD;;MACAT,UAAU,CAAC,KAAD,CAAV;IACF,CAVD;;IAWFM,SAAS;EACV,CAdQ,EAcN,EAdM,CAAT,CAVwB,CAyBxB;;EAEA,MAAMI,OAAO,GAAG,YAAY;IAC1BV,UAAU,CAAC,IAAD,CAAV;;IACA,IAAI;MACF,MAAMO,GAAG,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAUL,MAAM,GAAGP,GAAnB,CAAlB;MACAQ,OAAO,CAACC,GAAR,CAAYF,MAAM,GAACP,GAAnB;MACAE,OAAO,CAACS,GAAG,CAACV,IAAL,CAAP;IACD,CAJD,CAIE,OAAOY,GAAP,EAAY;MACZP,QAAQ,CAACO,GAAD,CAAR;IACD;;IACDT,UAAU,CAAC,KAAD,CAAV;EACD,CAVD;;EAYA,OAAO;IAAEH,IAAF;IAAQE,OAAR;IAAiBE,KAAjB;IAAwBS;EAAxB,CAAP;AACD,CAxCD;;GAAMf,Q;;AA0CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}